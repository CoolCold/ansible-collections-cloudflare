---
- name: "ensure cloudflare acme domain key"
  community.crypto.openssl_privatekey:
    path: "{{ cloudflare_acme_domain_key_file }}"
    mode: "0640"

- name: "ensure cloudflare acme csr"
  community.crypto.openssl_csr:
    path: "{{ cloudflare_acme_domain_csr_file }}"
    privatekey_path: "{{ cloudflare_acme_domain_key_file }}"
    common_name: "{{ cloudflare_acme_domain_name }}"

- name: "ensure cloudflare acme challenge"
  community.crypto.acme_certificate:
    account_email: "{{ cloudflare_acme_account_email | default(omit) }}"
    account_key: "{{ cloudflare_acme_account_key_file }}"
    challenge: "dns-01"
    csr: "{{ cloudflare_acme_domain_csr_file }}"
    dest: "{{ cloudflare_acme_domain_crt_file }}"
    fullchain_dest: "{{ cloudflare_acme_domain_chain_file }}"
    remaining_days: "{{ cloudflare_acme_certificate_remaining_days }}"
    terms_agreed: "{{ cloudflare_acme_terms_agreed }}"
    acme_version: "{{ cloudflare_acme_api_version }}"
    acme_directory: "{{ cloudflare_acme_directory_url }}"
  register: "cloudflare_acme_certificate_challenge"

- name: "ensure cloudflare acme dns challenge"
  block:
    - name: "ensure cloudflare dns challenge record"
      import_role:
        name: "damex.cloudflare.cloudflare_dns"
      vars:
        cloudflare_dns_zones:
          - name: "{{ cloudflare_acme_zone_name }}"
            account_email: "{{ cloudflare_acme_zone_cloudflare_account_email | default(omit) }}"
            account_api_key: "{{ cloudflare_acme_zone_cloudflare_account_api_key | default(omit) }}"
            api_token: "{{ cloudflare_acme_zone_cloudflare_api_token | default(omit) }}"
            txt_records:
              - name: "_acme-challenge.{{ cloudflare_acme_domain_name }}"
                value: "{{ cloudflare_acme_certificate_challenge.challenge_data[cloudflare_acme_domain_name]['dns-01'].resource_value }}"
      when: "cloudflare_acme_certificate_challenge.authorizations[cloudflare_acme_domain_name].status == 'pending'"
    - name: "ensure cloudflare acme challenge is validated"
      community.crypto.acme_certificate:
        account_email: "{{ cloudflare_acme_account_email | default(omit) }}"
        account_key: "{{ cloudflare_acme_account_key_file }}"
        challenge: "dns-01"
        csr: "{{ cloudflare_acme_domain_csr_file }}"
        dest: "{{ cloudflare_acme_domain_crt_file }}"
        fullchain_dest: "{{ cloudflare_acme_domain_chain_file }}"
        data: "{{ cloudflare_acme_certificate_challenge }}"
        remaining_days: "{{ cloudflare_acme_certificate_remaining_days }}"
        terms_agreed: "{{ cloudflare_acme_terms_agreed }}"
        acme_version: "{{ cloudflare_acme_api_version }}"
        acme_directory: "{{ cloudflare_acme_directory_url }}"
      until: "cloudflare_acme_certificate_validate_challenge.authorizations[cloudflare_acme_domain_name].status == 'valid'"
      retries: "{{ cloudflare_acme_challenge_retries }}"
      register: "cloudflare_acme_certificate_validate_challenge"
  always:
    - name: "ensure cloudflare dns challenge record is absent"
      import_role:
        name: "damex.cloudflare.cloudflare_dns"
      vars:
        cloudflare_dns_zones:
          - name: "{{ cloudflare_acme_zone_name }}"
            account_email: "{{ cloudflare_acme_zone_cloudflare_account_email | default(omit) }}"
            account_api_key: "{{ cloudflare_acme_zone_cloudflare_account_api_key | default(omit) }}"
            api_token: "{{ cloudflare_acme_zone_cloudflare_api_token | default(omit) }}"
            txt_records:
              - name: "_acme-challenge.{{ cloudflare_acme_domain_name }}"
                state: "absent"
      when: "cloudflare_acme_certificate_challenge.authorizations[cloudflare_acme_domain_name].status == 'pending'"
  when: "cloudflare_acme_certificate_challenge.changed"
